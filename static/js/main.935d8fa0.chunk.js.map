{"version":3,"sources":["icons/closeicon.png","components/Cell.js","components/algorithms/Astar.js","components/algorithms/Algorithm.js","components/generators/Generator.js","components/interface/Interface.js","components/interface/config/AstarConfig.js","components/interface/config/DjisktrasConfig.js","components/interface/config/GreedyBFSConfig.js","components/interface/config/PerlinNoiseConfig.js","components/interface/config/MazeConfig.js","components/interface/Settings.js","App.js","index.js"],"names":["module","exports","Cell","props","changeType","type","cell","state","setState","draw","window","drawType","mousehold","mouseDown","e","lock","preventDefault","cellType","this","config","rows","columns","id","startCell","finishCell","nextProps","nextState","updateCell","row","column","className","onMouseEnter","onMouseDown","Component","Astar","defineGrid","oldGrid","grid","r","length","c","gCost","undefined","prevCell","setGCost","newG","Object","assign","hCost","getCellByID","D","D2","Math","sqrt","x1","y1","x2","y2","dx","abs","dy","hType","astar","h","min","pow","hMultiplier","fCost","algorithm","nums","replace","split","parseInt","getNeighbors","closed","neighbors","top","bottom","left","right","push","canDiag","filter","n","i","setPrevCell","openCell","open","cellRefs","closeCell","updateApp","startTime","Date","getTime","speed","console","log","setInterval","j","current","done","showPath","finishDate","stats","timeElapsed","clearInterval","plusG","path","pathLength","reverse","index","spAlg","setTimeout","Algorithm","startAlgorithm","alg","Generator","genPerlinNoise","perlinConfig","perlinNoise","perlin","tumult","PerlinN","gen","density","threshhold","initializeMaze","mazeGrid","mazeRow","mazeColumn","status","getMazeNeighbors","openMazeWall","fromCell","toCell","genRecursiveBacktrackerMaze","stack","visited","num","mazeAlg","randNeighbor","floor","random","pop","Interface","show","redirectTo","redirect","setRedirect","to","getShow","showHideUI","onClick","runAlgorithm","bind","generateMap","clearGrid","toString","substring","AstarConfig","changeHType","getHTypeStyle","setHMult","target","value","setSpeed","speedToLinear","updateConfig","setConfig","toggleCanDiag","checked","onMouseUp","onChange","max","style","position","DjisktrasConfig","GreedyBFSConfig","PerlinNoiseConfig","setDensity","setThresh","MazeConfig","Settings","exitSettings","localStorage","setItem","getItem","src","closeIcon","alt","App","handKeyEvents","key","resetAlgorithm","handleMouseEvents","forceUpdate","newConfig","mapType","stopAlgorithm","genRef","newCell","newGrid","indices","renderGrid","map","index1","clear","index2","ref","changeDrawWallType","renderInterface","showInterface","innerHeight","innerWidth","React","createRef","document","addEventListener","basename","width","height","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.935d8fa0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/closeicon.452f6e9c.png\";","import React, { Component } from 'react'\r\n\r\nexport class Cell extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            cell: this.props.cell,\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const rows = this.props.config.rows\r\n        const columns = this.props.config.columns\r\n        const cell = this.state.cell\r\n        //if(this.state.cell.id === `CELL${Math.floor(rows/2)}-0`) this.setState({...this.state, cell: {...cell, type: 'START'}})\r\n        //if(this.state.cell.id === `CELL${Math.floor(rows/2)}-${columns-1}`) this.setState({...this.state, cell: {...cell, type: 'FINISH'}})\r\n        if(this.state.cell.id === this.props.startCell) this.setState({...this.state, cell: {...cell, type: 'START'}})\r\n        if(this.state.cell.id === this.props.finishCell) this.setState({...this.state, cell: {...cell, type: 'FINISH'}})\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(this.state !== nextState) return true\r\n        else return false\r\n    }\r\n    componentDidUpdate() {\r\n        const cell = this.state.cell\r\n        this.props.updateCell(cell.row, cell.column, cell)\r\n    }\r\n    changeType = (type) => {\r\n        const cell = this.state.cell\r\n        if(type === 'WALL') {\r\n            if(cell.type === 'START' || cell.type === 'FINISH') return null\r\n        }\r\n        this.setState({...this.state, cell: {...cell, type}})\r\n    }\r\n    draw = () => {\r\n        if(this.state.cell.type === 'WALL') {\r\n            if(window.drawType === 'START' || window.drawType === 'FINISH') return null\r\n        }\r\n        if(window.mousehold && this.state.cell.type !== 'START' && this.state.cell.type !== 'FINISH') {\r\n            const cell = this.state.cell\r\n            this.setState({...this.state, cell: {...cell, type: window.drawType}})\r\n        }\r\n    }\r\n    mouseDown = (e) => {\r\n        if(!window.lock) {\r\n            e.preventDefault()\r\n            const cellType = this.state.cell.type\r\n            if(cellType === 'WALL') {\r\n                window.drawType='NORMAL'\r\n                this.changeType('NORMAL')\r\n            }else if(cellType === 'START') {\r\n                window.drawType='START'\r\n            }else if(cellType === 'FINISH') {\r\n                window.drawType='FINISH'\r\n            }else {\r\n                window.drawType='WALL'\r\n                this.changeType('WALL')\r\n            }\r\n            this.draw()\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div \r\n                className={`grid-cell ${this.state.cell.type}`} \r\n                onMouseEnter={this.draw}\r\n                onMouseDown={e => this.mouseDown(e)}\r\n            >\r\n                <div className='grid-cell-background'></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Cell\r\n","import React, { Component } from 'react'\r\n\r\nexport class Astar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            open: [],\r\n            closed: [],\r\n            D: 10,\r\n            done: false,\r\n        }\r\n    }\r\n    defineGrid = (oldGrid) => {\r\n        let startCell = null\r\n        let finishCell = null\r\n        let grid = []\r\n\r\n        for(let r = 0; r < this.props.grid.length; r++) {\r\n            grid[r] = []\r\n            for(let c = 0; c < this.props.grid[r].length; c++) {\r\n                const cell = this.props.grid[r][c]\r\n                const gCost = oldGrid === undefined ? 99999 : oldGrid[r][c].gCost\r\n                const prevCell = oldGrid === undefined ? null : oldGrid[r][c].prevCell\r\n                grid[r][c] = {\r\n                    ...cell,\r\n                    gCost, //h and f are determined during the algorithm\r\n                    prevCell\r\n                }\r\n                if(cell.type === 'START') {\r\n                    grid[r][c].gCost = 0\r\n                    startCell = grid[r][c].id\r\n                }\r\n                if(cell.type === 'FINISH') finishCell = grid[r][c].id\r\n            }\r\n        }\r\n        return {startCell, finishCell, grid}\r\n    }\r\n    componentDidMount() {\r\n        for(let r = 0; r < this.props.grid.length; r++) {\r\n            for(let c = 0; c < this.props.grid[r].length; c++) {\r\n                const cell = this.props.grid[r][c]\r\n                if(cell.type === 'CLOSE' || cell.type === 'OPEN' || cell.type === 'PATH') {\r\n                    window.cellRefs[r][c].changeType('NORMAL')\r\n                }\r\n            }\r\n        }\r\n        setTimeout(() => {\r\n            this.setState({...this.state, ...this.defineGrid()})\r\n            this.algorithm()\r\n        }, 10)\r\n    }\r\n    componentDidUpdate(nextProps) {\r\n        const { grid } = this.props\r\n        if(nextProps.grid !== grid) {\r\n            this.setState({...this.state, ...this.defineGrid(this.state.grid)})\r\n        }\r\n    }\r\n    setGCost = (cell, newG) => {\r\n        cell.gCost = newG\r\n        let grid = Object.assign([], this.state.grid)\r\n        grid[cell.row][cell.column] = Object.assign({}, cell)\r\n        this.setState({...this.state, grid})\r\n    }\r\n    hCost = cell => {\r\n        try {\r\n            const finishCell = this.getCellByID(this.state.finishCell)\r\n            const D = this.state.D\r\n            const D2 = D * Math.sqrt(2)\r\n            const x1 = cell.column; const y1 = cell.row; const x2 = finishCell.column; const y2 = finishCell.row\r\n            const dx = Math.abs(x1 - x2)\r\n            const dy = Math.abs(y1 - y2)\r\n            const hType = this.props.config.astar.hType\r\n            let h = 0\r\n            if(hType === 'manhatten') h = D * (dx + dy) //MANHATTAN DISTANCE\r\n            if(hType === 'octile') h = D * (dx + dy) + (D2 - 2*D) * Math.min(dx, dy) //OCTILE DISTANCE\r\n            if(hType === 'euclidian') h = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2)) * D //EUCLIDIAN DISTANCE\r\n            h *= this.props.config.astar.hMultiplier\r\n            return h\r\n        } catch(e) {return 99999}\r\n    }\r\n    fCost = cell => {\r\n        if(window.algorithm === 'A*') return cell.gCost + this.hCost(cell)\r\n        if(window.algorithm === 'Djisktras') return cell.gCost\r\n        if(window.algorithm === 'Greedy') return this.hCost(cell)\r\n        //console.log(cell.gCost, this.hCost(cell))\r\n    }\r\n    getCellByID = id => {\r\n        id = id.replace('CELL', '')\r\n        id = id.replace('-', ' ')\r\n        const nums = id.split(' ')\r\n        const cell = this.state.grid[parseInt(nums[0])][parseInt(nums[1])]\r\n        return cell\r\n    }\r\n    getNeighbors = cell => {\r\n        const grid = this.state.grid\r\n        const closed = this.state.closed\r\n        const config = this.props.config\r\n\r\n        const row = cell.row\r\n        const column = cell.column\r\n\r\n        let neighbors = []\r\n        const top = row === 0 ? false : true\r\n        const bottom = row === config.rows-1 ? false : true\r\n        const left = column === 0 ? false : true\r\n        const right = column === config.columns-1 ? false : true\r\n        \r\n        if(top) neighbors.push(grid[row-1][column])\r\n        if(bottom) neighbors.push(grid[row+1][column])\r\n        if(left) neighbors.push(grid[row][column-1])\r\n        if(right) neighbors.push(grid[row][column+1])\r\n        \r\n        if(this.props.config.canDiag) {\r\n            if(top && right) {\r\n                if(grid[row-1][column].type !== 'WALL' && grid[row][column+1] !== 'WALL') neighbors.push(grid[row-1][column+1])\r\n            }\r\n            if(top && left){\r\n                if(grid[row-1][column].type !== 'WALL' && grid[row][column-1] !== 'WALL') neighbors.push(grid[row-1][column-1])\r\n            } \r\n            if(bottom && right){\r\n                if(grid[row+1][column].type !== 'WALL' && grid[row][column+1] !== 'WALL') neighbors.push(grid[row+1][column+1])\r\n            } \r\n            if(bottom && left){\r\n                if(grid[row+1][column].type !== 'WALL' && grid[row][column-1] !== 'WALL') neighbors.push(grid[row+1][column-1])\r\n            } \r\n        }\r\n        neighbors = neighbors.filter(n => n.type !== 'WALL')\r\n        \r\n        for(let i = 0; i< closed.length; i++) {\r\n            neighbors = neighbors.filter(n => n.id !== closed[i].id)\r\n        }\r\n\r\n        return neighbors\r\n    }\r\n    setPrevCell = (cell, prevCell) => {\r\n        let grid = Object.assign([], this.state.grid)\r\n        grid[cell.row][cell.column] = Object.assign({}, grid[cell.row][cell.column], {prevCell: prevCell.id})\r\n        this.setState({...this.state, grid})\r\n    }\r\n    openCell = cell => {\r\n        let open = Object.assign([], this.state.open)\r\n        open.push(cell)\r\n        this.setState({...this.state, open})\r\n        if(cell.id !== this.state.startCell && cell.id !== this.state.finishCell) {\r\n            window.cellRefs[cell.row][cell.column].changeType('OPEN')\r\n        }\r\n    }\r\n    closeCell = cell => {\r\n        let open = Object.assign([], this.state.open)\r\n        let closed = Object.assign([], this.state.closed)\r\n        closed.push(cell)\r\n        open = open.filter(c => c.id !== cell.id)\r\n        if(cell.id !== this.state.startCell && cell.id !== this.state.finishCell) {\r\n            window.cellRefs[cell.row][cell.column].changeType('CLOSE')\r\n        }\r\n        this.setState({...this.state, closed, open})\r\n    }\r\n    algorithm = () => {\r\n        window.lock = true\r\n        window.updateApp()\r\n        const startDate = new Date()\r\n        const startTime = startDate.getTime()\r\n        this.openCell(this.getCellByID(this.state.startCell))\r\n        const speed = this.props.config.speed < 1 ? (1 - this.props.config.speed) * 100 : 1\r\n        console.log(speed)\r\n        this.astar = setInterval(() => {\r\n            for(let j = 0; j < this.props.config.speed; j++) {\r\n                let current = this.getCellByID(this.state.open[0].id)\r\n                for(let i = 0; i < this.state.open.length; i++) {\r\n                    const cell = this.getCellByID(this.state.open[i].id)\r\n                    if(this.fCost(cell) < this.fCost(current)) {\r\n                        current = cell\r\n                    } else if(this.fCost(cell) === this.fCost(current)) {\r\n                        if(this.hCost(cell) < this.hCost(current)) {\r\n                            current = cell\r\n                        }\r\n                    }\r\n                }\r\n                \r\n                this.closeCell(current)\r\n                \r\n \r\n                if(current.id === this.state.finishCell) {\r\n                    this.setState({...this.state, done: true})\r\n                    this.showPath()\r\n                    const finishDate = new Date()\r\n                    window.stats.timeElapsed = (finishDate.getTime() - startTime)/1000\r\n                    window.updateApp()\r\n                    clearInterval(this.astar)\r\n                    //path found \r\n                }\r\n                const neighbors = this.getNeighbors(current)\r\n                for(let i = 0; i < neighbors.length; i++) {\r\n                    const diag = current.row !== neighbors[i].row && current.column !== neighbors[i].column ? true : false\r\n                    const plusG = diag ? this.state.D * Math.sqrt(2) : this.state.D\r\n                    if(current.gCost + plusG < neighbors[i].gCost) {\r\n                        this.setGCost(neighbors[i], current.gCost + plusG)\r\n                        this.setPrevCell(neighbors[i], current)\r\n                        //console.log(this.state.open.forEach(c => console.log(c)))\r\n                        if(this.state.open.filter(c => c.id === neighbors[i].id).length === 0) {\r\n                            this.openCell(neighbors[i]) \r\n                        } \r\n                    }\r\n                }\r\n                if(this.state.open.length === 0) {\r\n                    const finishDate = new Date()\r\n                    window.stats.timeElapsed = (finishDate.getTime() - startTime)/1000\r\n                    window.lock = false\r\n                    window.updateApp()\r\n                    clearInterval(this.astar)\r\n                }\r\n            }\r\n        }, speed)\r\n    }\r\n    showPath = () => {\r\n        let path = []\r\n        let current = this.getCellByID(this.state.finishCell)\r\n        window.stats.pathLength = current.gCost\r\n        window.updateApp()\r\n        while(current.id !== this.state.startCell) {\r\n            const prevCell = this.getCellByID(current.prevCell)\r\n            path.push(prevCell)\r\n            current = prevCell\r\n        }\r\n        path.reverse()\r\n        \r\n        let index = 0\r\n        this.spAlg = setInterval(() => {\r\n            const cell = path[index]\r\n            if(cell.id !== this.state.startCell && cell.id !== this.state.finishCell) {\r\n                window.cellRefs[cell.row][cell.column].changeType('PATH')\r\n            }\r\n            if(index === path.length - 1) {\r\n                clearInterval(this.spAlg)\r\n                window.lock = false\r\n                window.updateApp()\r\n            }\r\n            index++\r\n        }, 20)\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.spAlg)\r\n        clearInterval(this.astar)\r\n    }\r\n    render() {\r\n        return <div></div>\r\n    } \r\n}\r\n\r\nexport default Astar\r\n","import React, { Component } from 'react'\r\n\r\nimport Astar from './Astar'\r\n\r\nexport class Algorithm extends Component {\r\n    shouldComponentUpdate() {\r\n        if(window.lock) return false //if locked, dont pass new props\r\n        else return true\r\n    }\r\n    startAlgorithm = alg => {\r\n        if(this.props.startAlgorithm) {\r\n            if(alg === 'A*' || alg === 'Djisktras' || alg === 'Greedy') {\r\n                return <Astar grid={this.props.grid} config={this.props.config}/>\r\n            }\r\n        } else return null\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.startAlgorithm(window.algorithm)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Algorithm\r\n","import React, { Component } from 'react'\r\nimport tumult from 'tumult'\r\n\r\nexport class Generator extends Component {\r\n\r\n    // PERLIN NOISE\r\n    genPerlinNoise = () => {\r\n        window.lock = true\r\n        const { config, grid } = this.props\r\n        const perlinConfig = config.perlinNoise\r\n        const perlin = new tumult.PerlinN()\r\n        for(let r = 0; r < config.rows; r++) {\r\n            for(let c = 0; c < config.columns; c++) {\r\n                if(grid[r][c].type !== 'START' && grid[r][c].type !== 'FINISH') {\r\n                    const val = Math.abs(perlin.gen(c/10*perlinConfig.density, r/10*perlinConfig.density))\r\n                    //if(grid[r][c].type === 'WALL') window.cellRefs[r][c].changeType('NORMAL')\r\n                    if(val > perlinConfig.threshhold) {\r\n                        window.cellRefs[r][c].changeType('WALL')\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        window.lock = false\r\n    }\r\n    // RECURSIVE BACKTRACKER MAZE\r\n    initializeMaze = () => {\r\n        const { config, grid } = this.props\r\n        let mazeGrid = []\r\n\r\n        let mazeRow = 0\r\n        let mazeColumn = 0\r\n        for(let r = 0; r < config.rows; r++) {\r\n            if(r%2 !== 0) {\r\n                mazeGrid[mazeRow] = []\r\n                for(let c = 0; c < config.columns; c++) {\r\n                    if(c%2 !== 0) {\r\n                        mazeGrid[mazeRow].push({\r\n                            mazeRow, mazeColumn, //the cells row and column in the maze\r\n                            status:'UNVISITED', //other status' are 'VISITED' and 'INSTACK'\r\n                            ...grid[r][c],\r\n                        })\r\n                        mazeColumn++\r\n                    }\r\n                    else window.cellRefs[r][c].changeType('WALL')\r\n                }\r\n                mazeRow++\r\n                mazeColumn = 0\r\n            } else {\r\n                for(let c = 0; c < config.columns; c++) {\r\n                    window.cellRefs[r][c].changeType('WALL')\r\n                }\r\n            }\r\n        }\r\n        return mazeGrid\r\n    }\r\n    getMazeNeighbors = (cell, mazeGrid) => {\r\n        const {mazeRow, mazeColumn} = cell\r\n        const mazeRows = mazeGrid.length\r\n        const mazeColumns = mazeGrid[0].length\r\n        let neighbors = []\r\n        //console.log(cell, mazeGrid)\r\n\r\n        const top = mazeRow - 1 >= 0 ? true : false\r\n        const bottom = mazeRow + 1 <= mazeRows - 1 ? true : false\r\n        const left = mazeColumn - 1 >= 0 ? true : false\r\n        const right = mazeColumn + 1 <= mazeColumns - 1 ? true : false\r\n        \r\n        if(top) neighbors.push(mazeGrid[mazeRow-1][mazeColumn])\r\n        if(bottom) neighbors.push(mazeGrid[mazeRow+1][mazeColumn])\r\n        \r\n        if(left) neighbors.push(mazeGrid[mazeRow][mazeColumn-1])\r\n        if(right) neighbors.push(mazeGrid[mazeRow][mazeColumn+1])\r\n\r\n        if(neighbors.length > 0) neighbors = neighbors.filter(c => c.status === 'UNVISITED')\r\n        console.log(neighbors)\r\n        return neighbors\r\n    }\r\n    openMazeWall = (fromCell, toCell) => {\r\n        const row = (fromCell.row + toCell.row)/2\r\n        const column = (fromCell.column + toCell.column)/2\r\n        if(this.props.grid[row][column].type !== 'START' && this.props.grid[row][column].type !== 'FINISH'){\r\n            window.cellRefs[row][column].changeType('NORMAL')  \r\n        }\r\n    }\r\n    genRecursiveBacktrackerMaze = () => {\r\n        window.lock = true\r\n        let mazeGrid = this.initializeMaze()\r\n        let stack = [mazeGrid[0][0]]\r\n        let visited = []\r\n        console.log(mazeGrid)\r\n        let num = 0\r\n        this.mazeAlg = setInterval(() => { \r\n            const current = stack[stack.length-1] //gets last cell in stack\r\n            const neighbors = this.getMazeNeighbors(current, mazeGrid)\r\n            //window.cellRefs[current.row][current.column].changeType('WALL')\r\n\r\n            if(neighbors.length !== 0) {\r\n                const randNeighbor = neighbors[Math.floor(Math.random() * neighbors.length)]\r\n                stack.push(randNeighbor)\r\n                mazeGrid[current.mazeRow][current.mazeColumn].status = 'INSTACK'\r\n                this.openMazeWall(current, randNeighbor)\r\n            } else {\r\n                stack.pop()\r\n                visited.push(current)\r\n                mazeGrid[current.mazeRow][current.mazeColumn].status = 'VISITED'\r\n            }\r\n            //if(num === 100) clearInterval(this.mazeAlg)\r\n            console.log(num)\r\n            num++\r\n            if(stack.length === 0) {\r\n                window.lock = false\r\n                window.updateApp()\r\n                clearInterval(this.mazeAlg) \r\n            }\r\n        }, 1)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Generator\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport './interface.css'\r\n\r\nexport class Interface extends Component {\r\n    state = {\r\n        show: true,\r\n        redirectTo: '',\r\n        redirect: false\r\n    }\r\n    setRedirect = redirectTo => {\r\n        this.setState({redirectTo, redirect: true})\r\n    }\r\n    redirect = () => {\r\n        if(this.state.redirect) {\r\n            this.setState({...this.state, redirect: false})\r\n            return <Redirect to={this.state.redirectTo}/>\r\n        }\r\n    }\r\n    getShow = (show) => {\r\n        if(show) return 'Show'\r\n        else return 'Hide'\r\n    }\r\n    showHideUI = () => {\r\n        this.setState({...this.state, show: !this.state.show})\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={`interface ${this.getShow(this.state.show)}`}>\r\n                <div className='interface-header'>\r\n                    <h1>Pathfinding Visualizer</h1>\r\n                    <div className='interface-btns' >          \r\n                        <button className={`interface-btn pathfinding Greedy button`} onClick={this.props.runAlgorithm.bind(this, 'Greedy')}> Visualize Greedy BFS</button>\r\n                        <button className={`interface-btn pathfinding Djisktras button`} onClick={this.props.runAlgorithm.bind(this, 'Djisktras')}>Visualize Djisktras</button>\r\n                        <button className={`interface-btn pathfinding AStar button`} onClick={this.props.runAlgorithm.bind(this, 'A*')}> Visualize A*</button>\r\n                        <button className={`interface-btn generator button`} onClick={this.props.generateMap.bind(this, 'maze')}> Generate Maze</button>    \r\n                        <button className={`interface-btn generator button`} onClick={this.props.generateMap.bind(this, 'perlin')}> Generate Noise Map</button>\r\n                        <button className={`interface-btn generator button`} onClick={this.props.clearGrid}> Clear Grid</button> \r\n                    </div>\r\n                </div>\r\n                <div className='interface-stats'>\r\n                    <p>{`Path Length: ${window.stats.pathLength.toString().substring(0,6)}`}</p>\r\n                    <p>{`Time Elapsed: ${window.stats.timeElapsed.toString().substring(0,4)}s`}</p>\r\n                </div>\r\n                <button className='interface-hideuibtn' onClick={this.showHideUI}>{`${this.getShow(!this.state.show)} UI`}</button>\r\n                <button className='interface-settingsbtn' onClick={this.setRedirect.bind(this, '/settings/astar')}>Settings</button>\r\n                {this.redirect()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Interface\r\n","import React, { Component } from 'react'\r\n\r\nimport './config.css'\r\n\r\nexport class AstarConfig extends Component {\r\n    state = {\r\n        ...this.props.config\r\n    }\r\n    changeHType = hType => {\r\n        this.setState({...this.state, astar:{...this.state.astar, hType}})\r\n    }\r\n    getHTypeStyle = hType => {\r\n        if(this.state.astar.hType === hType) return 'selected'\r\n        else return 'notselected'\r\n    }\r\n    setHMult = e => {\r\n        console.log(e.target.value/100)\r\n        this.setState({...this.state, astar:{...this.state.astar, hMultiplier: parseInt(e.target.value)/100}})\r\n    }\r\n    setSpeed = e => {\r\n        let speed = 1\r\n        if(e.target.value < 50) speed = e.target.value/50\r\n        else if(e.target.value > 50) speed = e.target.value - 50 + 1\r\n        this.setState({...this.state, speed})\r\n    }\r\n    speedToLinear = () => {\r\n        const speed = this.state.speed\r\n        if(speed < 1) return speed*50\r\n        else if(speed > 1) return speed + 50 - 1\r\n        else if(speed === 1) return 50 \r\n    }\r\n    updateConfig = () => {\r\n        setTimeout(() => {\r\n            this.props.setConfig(this.state)\r\n        }, 100)\r\n    }\r\n    toggleCanDiag = e => {\r\n        this.setState({...this.state, canDiag:e.target.checked})\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='settings-menu-config-container astar' onMouseUp={this.updateConfig}>\r\n                <h1>A* Options</h1>\r\n                <div className='settings-menu-config-options'>\r\n\r\n                    <label>{`Speed - ${this.state.speed}`}</label>\r\n                    <input type='range' value={this.speedToLinear().toString()}onChange={this.setSpeed.bind(this)}/>\r\n\r\n                    <label>{`Hueristic multiplier - ${this.state.astar.hMultiplier}`}</label>\r\n                    <input value={(this.state.astar.hMultiplier*100).toString()} \r\n                            type='range' \r\n                            onChange={this.setHMult.bind(this)}\r\n                            min='0'\r\n                            max='200'/>\r\n\r\n                    <label>Diagonal Movement</label>\r\n                    <label className='checkbox'>\r\n                        .\r\n                        <input type='checkbox' checked={this.state.canDiag} onChange={this.toggleCanDiag.bind(this)} />\r\n                        <span className='checkbox-custom' />\r\n                    </label>\r\n\r\n                    <label style={{position:'relative', top:'7%'}}>Hueristic Type</label>\r\n                    <div className='settings-menu-config-container astar htypeSelect'>\r\n                        <button \r\n                            className={`${this.getHTypeStyle('manhatten')} button`}\r\n                            onClick={this.changeHType.bind(this, 'manhatten')}>Manhatten</button>\r\n                        <button \r\n                            className={`${this.getHTypeStyle('octile')} button`}\r\n                            onClick={this.changeHType.bind(this, 'octile')}>Octile</button>\r\n                        <button \r\n                            className={`${this.getHTypeStyle('euclidian')} button`}\r\n                            onClick={this.changeHType.bind(this, 'euclidian')}>Euclidian</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AstarConfig\r\n","import React, { Component } from 'react'\r\n\r\nimport './config.css'\r\n\r\nexport class DjisktrasConfig extends Component {\r\n    state = {\r\n        ...this.props.config\r\n    }\r\n    setSpeed = e => {\r\n        let speed = 1\r\n        if(e.target.value < 50) speed = e.target.value/50\r\n        else if(e.target.value > 50) speed = e.target.value - 50 + 1\r\n        this.setState({...this.state, speed})\r\n    }\r\n    speedToLinear = () => {\r\n        const speed = this.state.speed\r\n        if(speed < 1) return speed*50\r\n        else if(speed > 1) return speed + 50 - 1\r\n        else if(speed === 1) return 50 \r\n    }\r\n    updateConfig = () => {\r\n        setTimeout(() => {\r\n            this.props.setConfig(this.state)\r\n        }, 100)\r\n    }\r\n    toggleCanDiag = e => {\r\n        this.setState({...this.state, canDiag:e.target.checked})\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='settings-menu-config-container djisktras' onMouseUp={this.updateConfig}>\r\n                <h1>Djisktras Options</h1>\r\n                <div className='settings-menu-config-options'>\r\n\r\n                    <label>{`Speed - ${this.state.speed}`}</label>\r\n                    <input type='range' value={this.speedToLinear().toString()}onChange={this.setSpeed.bind(this)}/>\r\n\r\n                    <label>Diagonal Movement</label>\r\n                    <label className='checkbox'>\r\n                        .\r\n                        <input type='checkbox' checked={this.state.canDiag} onChange={this.toggleCanDiag.bind(this)} />\r\n                        <span className='checkbox-custom' />\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DjisktrasConfig\r\n","import React, { Component } from 'react'\r\n\r\nimport './config.css'\r\n\r\nexport class GreedyBFSConfig extends Component {\r\n    state = {\r\n        ...this.props.config\r\n    }\r\n    changeHType = hType => {\r\n        this.setState({...this.state, astar:{...this.state.astar, hType}})\r\n    }\r\n    getHTypeStyle = hType => {\r\n        if(this.state.astar.hType === hType) return 'selected'\r\n        else return 'notselected'\r\n    }\r\n    setHMult = e => {\r\n        console.log(e.target.value/100)\r\n        this.setState({...this.state, astar:{...this.state.astar, hMultiplier: parseInt(e.target.value)/100}})\r\n    }\r\n    setSpeed = e => {\r\n        let speed = 1\r\n        if(e.target.value < 50) speed = e.target.value/50\r\n        else if(e.target.value > 50) speed = e.target.value - 50 + 1\r\n        this.setState({...this.state, speed})\r\n    }\r\n    speedToLinear = () => {\r\n        const speed = this.state.speed\r\n        if(speed < 1) return speed*50\r\n        else if(speed > 1) return speed + 50 - 1\r\n        else if(speed === 1) return 50 \r\n    }\r\n    updateConfig = () => {\r\n        setTimeout(() => {\r\n            this.props.setConfig(this.state)\r\n        }, 100)\r\n    }\r\n    toggleCanDiag = e => {\r\n        this.setState({...this.state, canDiag:e.target.checked})\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='settings-menu-config-container greedy' onMouseUp={this.updateConfig}>\r\n                <h1>Greedy Best First Search Options</h1>\r\n                <div className='settings-menu-config-options'>\r\n\r\n                    <label>{`Speed - ${this.state.speed}`}</label>\r\n                    <input type='range' value={this.speedToLinear().toString()}onChange={this.setSpeed.bind(this)}/>\r\n\r\n                    <label>Diagonal Movement</label>\r\n                    <label className='checkbox'>\r\n                        .\r\n                        <input type='checkbox' checked={this.state.canDiag} onChange={this.toggleCanDiag.bind(this)} />\r\n                        <span className='checkbox-custom' />\r\n                    </label>\r\n                    <label style={{position:'relative', top:'7%'}}>Hueristic Type</label>\r\n                    <div className='settings-menu-config-container greedy htypeSelect'>\r\n                        <button \r\n                            className={`${this.getHTypeStyle('manhatten')} button`}\r\n                            onClick={this.changeHType.bind(this, 'manhatten')}>Manhatten</button>\r\n                        <button \r\n                            className={`${this.getHTypeStyle('octile')} button`}\r\n                            onClick={this.changeHType.bind(this, 'octile')}>Octile</button>\r\n                        <button \r\n                            className={`${this.getHTypeStyle('euclidian')} button`}\r\n                            onClick={this.changeHType.bind(this, 'euclidian')}>Euclidian</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GreedyBFSConfig\r\n","import React, { Component } from 'react'\r\n\r\nimport './config.css'\r\n\r\nexport class PerlinNoiseConfig extends Component {\r\n    state = {\r\n        ...this.props.config\r\n    }\r\n    \r\n    updateConfig = () => {\r\n        setTimeout(() => {\r\n            this.props.setConfig(this.state)\r\n        }, 100)\r\n    }\r\n    \r\n    setDensity = e => {\r\n        this.setState({...this.state, perlinNoise:{...this.state.perlinNoise, density: e.target.value/40}})\r\n    }\r\n    setThresh = e => {\r\n        this.setState({...this.state, perlinNoise:{...this.state.perlinNoise, threshhold: e.target.value/200}})\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='settings-menu-config-container perlinNoise' onMouseUp={this.updateConfig}>\r\n                <h1>Perlin Noise Map Options</h1>\r\n                <div className='settings-menu-config-options'>\r\n\r\n                    <label>{`Noise Density - ${this.state.perlinNoise.density}`}</label>\r\n                    <input type='range' value={this.state.perlinNoise.density * 40}onChange={this.setDensity.bind(this)}/>\r\n\r\n                    <label>{`Generation Threshhold - ${this.state.perlinNoise.threshhold}`}</label>\r\n                    <input type='range' value={this.state.perlinNoise.threshhold * 200}onChange={this.setThresh.bind(this)}/>\r\n\r\n                    <p style={{position:'absolute', bottom:'10%'}}>Note: A higher noise density will generally need a lower generation threshhold and vice-versa</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PerlinNoiseConfig\r\n","import React, { Component } from 'react'\r\n\r\nexport class MazeConfig extends Component {\r\n    render() {\r\n        return (\r\n            <div className='settings-menu-config-container djisktras'>\r\n                <h1>No available options for maze...</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MazeConfig\r\n","import React, { Component } from 'react'\r\nimport { Switch, Route, Redirect, Link } from 'react-router-dom'\r\n\r\nimport AstarConfig from './config/AstarConfig'\r\nimport DjisktrasConfig from './config/DjisktrasConfig'\r\nimport GreedyBFSConfig from './config/GreedyBFSConfig'\r\nimport PerlinNoiseConfig from './config/PerlinNoiseConfig'\r\nimport MazeConfig from './config/MazeConfig'\r\n\r\nimport './settings.css'\r\n\r\nimport closeIcon from '../../icons/closeicon.png'\r\n\r\nexport class Settings extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        let redirectTo = ''\r\n        let redirect = false\r\n        if(localStorage.getItem('selectedOption') !== null) {\r\n            redirectTo = localStorage.getItem('selectedOption')\r\n            redirect = true\r\n        }\r\n        this.state = {\r\n            redirectTo,\r\n            redirect\r\n        }\r\n        console.log(redirectTo)\r\n    }\r\n    exitSettings = () => {\r\n        this.setState({redirectTo: `/`, redirect: true})\r\n    }\r\n    setRedirect = redirectTo => {\r\n        localStorage.setItem('selectedOption', redirectTo)\r\n        this.setState({redirectTo: `/settings/${redirectTo}`, redirect: true})\r\n    }\r\n    redirect = () => {\r\n        if(this.state.redirect) {\r\n            this.setState({...this.state, redirect: false})\r\n            return <Redirect to={this.state.redirectTo}/>\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='settings-container'>\r\n                <div className='settings-menu'>\r\n                    <div className='settings-menu-header'> <h1>Visualizer Settings</h1> </div>\r\n                    <div className='settings-menu-selection'>\r\n                        <button className='settings-menu-selection-btn' onClick={this.setRedirect.bind(this, 'astar')}> A* </button>\r\n                        <button className='settings-menu-selection-btn' onClick={this.setRedirect.bind(this, 'djisktras')}> Djisktras </button>\r\n                        <button className='settings-menu-selection-btn' onClick={this.setRedirect.bind(this, 'greedy')}> Greedy BFS</button>\r\n                        <button className='settings-menu-selection-btn' onClick={this.setRedirect.bind(this, 'perlinnoise')}> Noise Map </button>\r\n                        <button className='settings-menu-selection-btn' onClick={this.setRedirect.bind(this, 'maze')}> Maze </button>\r\n                    </div>\r\n                    <div className='settings-menu-config'>\r\n                        <Switch>\r\n                            <Route path='/settings/astar'>\r\n                                <AstarConfig config={this.props.config} setConfig={this.props.setConfig}/>\r\n                            </Route>\r\n                            <Route path='/settings/djisktras'>\r\n                                <DjisktrasConfig config={this.props.config} setConfig={this.props.setConfig}/>\r\n                            </Route>\r\n                            <Route path='/settings/greedy'>\r\n                                <GreedyBFSConfig config={this.props.config} setConfig={this.props.setConfig}/>\r\n                            </Route>\r\n                            <Route path='/settings/perlinnoise'>\r\n                                <PerlinNoiseConfig config={this.props.config} setConfig={this.props.setConfig}/>\r\n                            </Route>\r\n                            <Route path='/settings/maze'>\r\n                                <MazeConfig />\r\n                            </Route>\r\n                        </Switch>\r\n                    </div>\r\n                    <img className='settings-close' src={closeIcon} alt='' onClick={this.exitSettings}/>\r\n                </div>\r\n                {this.redirect()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Settings\r\n","import React, { Component } from 'react'\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\nimport Cell from './components/Cell'\r\nimport Algorithm from './components/algorithms/Algorithm'\r\nimport Generator from './components/generators/Generator'\r\nimport Interface from './components/interface/Interface'\r\nimport Settings from './components/interface/Settings'\r\n\r\nimport './css/App.css'\r\nimport './css/grid.css'\r\nimport './css/slider.css'\r\nimport './css/checkbox.css'\r\n   \r\nexport class App extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        let rows = Math.floor(window.innerHeight/25 - (window.innerHeight/25*2)/25)\r\n        let columns = Math.floor(window.innerWidth/25 - (window.innerWidth/25*2)/25)\r\n        console.log(rows, columns)\r\n        rows++\r\n        if(rows%2 === 0) rows++\r\n        if(columns%2 === 0) columns++\r\n        console.log(rows, columns)\r\n        let grid = []\r\n        window.cellRefs = []\r\n        for(let r = 0; r < rows; r++) {\r\n            grid[r] = []\r\n            for(let c = 0; c < columns; c++) {\r\n                grid[r][c] = {\r\n                    id: `CELL${r}-${c}`,\r\n                    row: r,\r\n                    column: c,\r\n                    type: 'NORMAL'\r\n                }\r\n            }\r\n        }\r\n\r\n        this.state = {\r\n            config: {\r\n                rows,\r\n                columns,\r\n                speed: 1,\r\n                canDiag: true,\r\n                astar: {\r\n                    hType: 'octile',\r\n                    hMultiplier: 1\r\n                },\r\n                perlinNoise: {\r\n                    density: 1,\r\n                    threshhold: .22\r\n                }\r\n            },\r\n            grid,\r\n            startCell: `CELL${Math.floor(rows/2)}-1`,\r\n            finishCell: `CELL${Math.floor(rows/2)}-${columns-2}`,\r\n            startAlgorithm: false,\r\n            showInterface: true,\r\n        }\r\n        this.genRef = React.createRef()\r\n        window.updateApp = this.forceUpdate.bind(this)\r\n        window.algorithm = 'A*'\r\n        window.drawType = 'NORMAL'\r\n        window.stats = {\r\n            pathLength: 0,\r\n            timeElapsed: 0\r\n        }\r\n        window.lock = false\r\n        window.mousehold = false\r\n    }\r\n    componentDidMount() {\r\n        document.addEventListener('keydown', this.handKeyEvents.bind(this))\r\n        document.addEventListener('mousedown', this.handleMouseEvents.bind(this))\r\n        document.addEventListener('mouseup', this.handleMouseEvents.bind(this))\r\n        document.addEventListener('touchstart', this.handleMouseEvents.bind(this))\r\n        document.addEventListener('touchend', this.handleMouseEvents.bind(this))\r\n    }\r\n    handKeyEvents = e => {\r\n        if(e.key === 'c') this.clearGrid()\r\n        if(!window.lock) {\r\n            if(e.key === 'p') this.resetAlgorithm()\r\n            if(e.key === 'n') this.generateMap('perlin')\r\n            if(e.key === 'm') this.generateMap('maze')\r\n        }  \r\n    }\r\n    handleMouseEvents = e => {\r\n        if(!window.lock) {\r\n            if(e.type === 'mousedown' || e.type === 'touchstart') {window.mousehold = true; this.forceUpdate()}\r\n            if(e.type === 'mouseup' || e.type === 'touchend') {window.mousehold = false; this.forceUpdate()}\r\n        }\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(this.state.grid !== nextState.grid) return false\r\n        else if(this.state.config !== nextState.config) return true\r\n        else return true\r\n    }\r\n    setConfig = newConfig => {\r\n        this.setState({...this.state, config: newConfig})\r\n    }\r\n    generateMap = mapType => {\r\n        if(!window.lock) {\r\n            this.stopAlgorithm()\r\n            this.clearGrid()\r\n            window.lock = true\r\n            if(mapType === 'perlin') this.genRef.current.genPerlinNoise()\r\n            if(mapType === 'maze') this.genRef.current.genRecursiveBacktrackerMaze()\r\n        }\r\n    }\r\n    runAlgorithm = (algorithm) => {\r\n        if(!window.lock) {\r\n            window.lock = false\r\n            window.algorithm = algorithm\r\n            console.log(window.algorithm)\r\n            this.setState({...this.state, startAlgorithm: false}, () => {\r\n                this.setState({...this.state, startAlgorithm: true})\r\n            })\r\n        }\r\n    }\r\n    stopAlgorithm = () => {\r\n        window.lock = false\r\n        this.setState({...this.state, startAlgorithm: false})\r\n    }\r\n    clearGrid = () => {\r\n        window.lock = false\r\n        this.stopAlgorithm()\r\n        for(let r = 0; r < this.state.grid.length; r++) {\r\n            for(let c = 0; c < this.state.grid[r].length; c++) {\r\n                const cell = this.state.grid[r][c]\r\n                if(cell.type === 'WALL' || cell.type === 'PATH' \r\n                    || cell.type === 'OPEN' || cell.type === 'CLOSE') window.cellRefs[r][c].changeType('NORMAL')\r\n            }\r\n        }\r\n    }\r\n    updateCell = (r, c, newCell) => {\r\n        console.log(\"ASD\")\r\n        let newGrid = Object.assign([], this.state.grid)\r\n        let startCell = this.state.startCell\r\n        let finishCell = this.state.finishCell\r\n\r\n        newGrid[r][c] = newCell\r\n\r\n        if(newCell.type === 'START' && newCell.id !== startCell) {\r\n            const indices = startCell.replace('CELL', '').replace('-', ' ').split(' ')\r\n            window.cellRefs[indices[0]][indices[1]].changeType('NORMAL')\r\n            startCell = newCell.id\r\n        }\r\n        if(newCell.type === 'FINISH' && newCell.id !== finishCell) {\r\n            const indices = finishCell.replace('CELL', '').replace('-', ' ').split(' ')\r\n            window.cellRefs[indices[0]][indices[1]].changeType('NORMAL')\r\n            finishCell = newCell.id\r\n        }\r\n        this.setState({...this.state, grid: newGrid, startCell, finishCell})\r\n    }\r\n    renderGrid = () => {\r\n        return this.state.grid.map((row, index1) => {\r\n            window.cellRefs[index1] = []\r\n            return ( \r\n                <div style={{clear:'both'}} key={`row${index1}`}>\r\n                    {row.map((cell, index2) =>{ \r\n                        return (\r\n                            <Cell \r\n                                ref={Cell => window.cellRefs[index1][index2] = Cell}\r\n                                key={cell.id} \r\n                                cell={cell} \r\n                                updateCell={this.updateCell} \r\n                                changeDrawWallType={this.changeDrawWallType}\r\n                                config={this.state.config}\r\n                                startCell={this.state.startCell}\r\n                                finishCell={this.state.finishCell}\r\n                                />\r\n                        )\r\n                    })}\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n    renderInterface = () => {\r\n        if(!window.lock && this.state.showInterface) {\r\n            return <Interface \r\n                        config={this.state.config} \r\n                        setConfig={this.setConfig}\r\n                        runAlgorithm={this.runAlgorithm}\r\n                        generateMap={this.generateMap}\r\n                        clearGrid={this.clearGrid}\r\n                    />\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Router basename='/'>\r\n                <div className='app'>\r\n                    <div className='grid' style={{width: `${window.innerWidth +100}px`, height: `${window.innerHeight}px`}}>\r\n                        {this.renderGrid()}\r\n                    </div>\r\n                    <Algorithm grid={this.state.grid} config={this.state.config} startAlgorithm={this.state.startAlgorithm}/>\r\n                    <Generator grid={this.state.grid} config={this.state.config} ref={this.genRef}/>\r\n                    <Switch>\r\n                        <Route path='/settings'>\r\n                            {this.renderInterface()}\r\n                            <Settings config={this.state.config} setConfig={this.setConfig}/>\r\n                        </Route>\r\n                        <Route path='/'>\r\n                            {this.renderInterface()}\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}